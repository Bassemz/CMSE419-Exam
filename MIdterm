//Declare and create obj: 
Class obj = new Class();  //if app halts, move these statements to top of class
//Declare and create arr: 
Class[] name  =new Class[size]; //arr = {…} //arr.length;
//If Alternative: 
var = (bool expression) ? trueChoise : falseChoise;
Switch(expression){
Case value1: ……. Break;
Case value2: ……. Break;
Case value3: ……. Break;
Default: ……. Break; }
For (int i=0; i<exp; i++){……….}
//declaring a function
modifier returnValueType methodName(list of parameters) { 
			// Method body; 
}
String1.length();
String1.equals(string2) //for comparison
String1.toUpperCase() / toLowerCase() 
String1.trim() //removes leading and trailing spaces
ArrayList<ClassType(i.eString/Integer)> list = new ArrayList<ClassType>();
ArrayList methods:
add(value)
add(index, value)
clear()
indexOf(value)
get(index)
remove(index)
set(index, value)
size() //instead of .length
toString()

//Multiple button listener: 
	add “ implements View.OnClickListener” to the head of the class
	set your buttons all to the same function:
        bt_1.setOnClickListener(this);
        bt_2.setOnClickListener(this);
        bt_3.setOnClickListener(this);
        bt_4.setOnClickListener(this);
	redefine on click function outside the onCreate function:
public void onClick(View buttons) {
//determine which button is clicked and what to do in each case
        switch(buttons.getId()){

            case R.id.button: do something;

                break;
            case R.id.button2:do something;

                break;
            case R.id.button3:do something;

                break;
            case R.id.button4:do something;

                break;
        }
    }
//Defining and using ArrayAdapter with listView: 
	ArrayAdapter AdapterName = new ArrayAdapter(this, android.R.layout.simple_list_item_1, ArrayName); 
	//Get reference of listview: 
    ListView viewName = (ListView)findViewById(R.id.listView1/spinner/..etc); 
	//Pass adapter to listview: 
    viewName.setAdapter(AdapterName);
=> 	//Same thing for gridView just replace word “listView”
    //when array connected to adapter is changed, notify the adapter to reflect changes on screen
    adapter.notifyDataSetChanged();


//Spinners and Radio Buttons
//Create spinner dropdown menu: 
    //After putting widget in UI, create string array with the options in java file
    String[] options = {“choose” , “option1”, “option2”,..};
    //In onCreate function:
        spinner = findViewById(R.id.spinner);
        spinnerAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item, spinner_options);
        spinner.setAdapter(spinnerAdapter);

        sp_selection.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        switch(position){
                            case 1:
                                do something
                                break;
                            case 2:
                                do something
                                break;
                            case 3:
                                do something
                                break;
                        }
                    }
                }	
//Create Radio button group:
	Locate radio group component: rg=findViewById(R.id.radioGroup);
	rg.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, int i) { //i is the id of button clicked

                switch(checkedId){
                    case R.id.radioButton7:
                        Toast.makeText(MainActivity.this, "Yes Selected", Toast.LENGTH_SHORT).show();
                        break;
                    case R.id.radioButton8:
                        Toast.makeText(MainActivity.this, "No selected", Toast.LENGTH_SHORT).show();
                        break;
                    case R.id.radioButton9:
                        Toast.makeText(MainActivity.this, "May be selected", Toast.LENGTH_SHORT).show();
                        break;
                }
            }
        });
//To mark a radio button from data saved:
//Example of locating the button then marking it:
    RadioButton rb_department;
	if (foundStudent.getProgram().equals("cmpe")){
	                        rb_department = findViewById(R.id.cmpe_b);
	                    } else if (foundStudent.getProgram().equals("cmse")){
	                        rb_department = findViewById(R.id.cmse_b);
	                    } else if (foundStudent.getProgram().equals("blgm")){
	                        rb_department = findViewById(R.id.blgm_b);
	                    }
	                    //mark it as checked
	                    rb_department.setChecked(true);
//Intents
//Sending activity code:
    Intent intent=new Intent(MainActivity.this, MyNew.class); //defining intent	 			
    //Sending data to next activity using putExtra method				
    intent.putExtra("NAME", name);				
	intent.putExtra("SURNAME", surname);				
	//starting the next activity				
	startActivity(intent);
//receiving activity code:
    Intent intent=getIntent();
//If data passed is a complex type (i.e. array, custom object):
        String name = intent.getStringExtra();
        if(name!=null){
        //Getting the value stored in the name "NAME"
        //do something
        }
//Else:
        arr=(ArrayList<String>) intent.getSerializableExtra("newarray"); // in case of serializable obj
        if (arr!=null){
            //do stuff;
        }
//Get back to previous activity -> inside the bt_back.onClickListener put 
Finish();

//inserting images
// res -> drawable -> put all image files -> drag drop imageView -> select the specific image
// 
//removing nav bar
// res -> values -> themes -> themes.xml ->inside <style> replace parent with:
parent="Theme.MaterialComponents.DayNight.NoActionBar"


// File System (fs)
// Writing to a file (Method 1)
        try {
            FileOutputStream fos=openFileOutput(filename, Context.MODE_PRIVATE);
            String text=et1.getText().toString()+" "+et2.getText().toString()+" "+et3.getText().toString()+" "; 
            fos.write(text.getBytes());
            fos.close();
        }
        catch (IOException e) {
            e.printStackTrace();
        }    

// Writing to a file (Method 2) ----- BEST
try {
            FileOutputStream fos = openFileOutput(fileName, Context.MODE_PRIVATE);
            OutputStreamWriter osw = new OutputStreamWriter(fos);
            for(int i =0;i<studentArrayList.size();i++){
                osw.write(arr.get(i).toString()+"\n");  //ADD newline at the end!!!!!!!! important ok???
            }
            osw.flush();
            osw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

//Reading from a file (Method 1)
    try {
            String text="";
            FileInputStream fis=openFileInput(filename);
            int size=fis.available();
            byte[] buffer=new byte[size];
            fis.read(buffer);
            fis.close();
            text=new String(buffer);
            contents = new ArrayList<String>(Arrays.asList(text.split(" ")));
            Intent intent = new Intent(MainActivity.this, Main2Activity.class);
            intent.putExtra("array_list", contents);
            startActivity(intent);
        } catch (IOException e) {
            e.printStackTrace();
        }
//Reading from a file (Method 2) ---- BEST
try{
            InputStreamReader isr = new InputStreamReader(openFileInput(fileName));
            BufferedReader reader = new BufferedReader(isr);
            String LineFromFile="";
            while((LineFromFile = reader.readLine())!= null){
                StringTokenizer tokenizer = new StringTokenizer(LineFromFile, " ");
                String name = tokenizer.nextToken();
                String surname = tokenizer.nextToken();
                String studentNo = tokenizer.nextToken();
                String program = tokenizer.nextToken();
                Student student = new Student(Integer.parseInt(studentNo), name, surname, program);
                studentArrayList.add(student);


            }
            reader.close();
        } catch (IOException e) {
            Toast.makeText(this, "Input output filesystem exception", Toast.LENGTH_SHORT).show();
            e.printStackTrace();
        }


// Database
// 1-Add the MyDB.java file to the project and modify it according to DB design 
// 2-Usage: 
// a- Reading from Database
       MyDB myDBHandler = new MyDB(this);

        Cursor DBCursor = myDBHandler.getStudents();
        
        while(DBCursor.moveToNext()){
                studentsArrayList.add(DBCursor.getInt(0) + " " +DBCursor.getInt(1) + " " + DBCursor.getInt(2) + " " +DBCursor.getInt(3));
        }

// b- Adding to Database:
       MyDB myDBHandler = new MyDB(this);

        Cursor DBCursor = myDBHandler.getStudents();
        
        while(DBCursor.moveToNext()){
                studentsArrayList.add(DBCursor.getInt(0) + " " +DBCursor.getInt(1) + " " + DBCursor.getInt(2) + " " +DBCursor.getInt(3));
        }

// c- Deleting from Database:
       MyDB myDBHandler = new MyDB(this);

        Cursor DBCursor = myDBHandler.getStudents();
        
        while(DBCursor.moveToNext()){
                studentsArrayList.add(DBCursor.getInt(0) + " " +DBCursor.getInt(1) + " " + DBCursor.getInt(2) + " " +DBCursor.getInt(3));
        }